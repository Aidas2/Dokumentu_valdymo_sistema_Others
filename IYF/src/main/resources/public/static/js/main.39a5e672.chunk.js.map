{"version":3,"sources":["components/CartScrollBar.js","components/Counter.js","empty-states/EmptyCart.js","components/Header.js","components/Product.js","loaders/Product.js","loaders/Products.js","empty-states/NoResults.js","components/Products.js","components/Footer.js","components/QuickView.js","App.js","serviceWorker.js","index.js"],"names":["CartScrollBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleScroll","bind","assertThisInitialized","window","addEventListener","removeEventListener","event","refs","scrollbars","getValues","top","console","log","stopPropagation","react_default","a","createElement","lib","style","width","height","ref","children","Component","Counter","state","value","productQuantity","increment","decrement","e","setState","prevState","Number","updateQuantity","preventDefault","feedQty","className","href","onClick","type","onChange","feed","EmptyCart","src","alt","Header","showCart","cart","cartItems","mobileSearch","searchBox","handleMobileSearch","cartNode","findDOMNode","cartPreview","cartButton","classList","contains","target","document","handleClickOutside","view","_this2","map","product","key","name","image","price","quantity","removeProduct","id","length","empty_states_EmptyCart","CSSTransitionGroup_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","component","action","method","handleSearchNav","placeholder","handleSearch","handleSubmit","totalItems","total","handleCart","cartBounce","components_CartScrollBar","Product","selectedProduct","quickViewProdcut","isAdded","addToCart","setTimeout","openModal","quickView","components_Counter","resetQuantity","LoadingProduct","LoadingProducts","loaders_Product","NoResults","Products","productsData","term","searchTerm","productsList","filter","x","toLowerCase","includes","searchingFor","components_Product","loaders_Products","empty_states_NoResults","Footer","QuickView","domNode","modal","closeModal","handleClose","App","getProducts","axios","get","then","response","products","data","totalAmount","category","quickViewProduct","modalActive","handleCategory","handleAddToCart","sumTotalItems","sumTotalAmount","checkProduct","handleRemoveProduct","selectedProducts","cartItem","productID","productQty","index","findIndex","push","splice","some","item","i","parseInt","qty","components_Header","categoryTerm","moq","components_Products","components_Footer","components_QuickView","ReactDOM","render","App_App","getElementById","Boolean","location","hostname","match","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0TA+BeA,cA3BX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFLA,mFAKfU,OAAOC,iBAAiB,SAAUR,KAAKI,6DAGvCG,OAAOE,oBAAoB,SAAUT,KAAKI,mDAEjCM,GACSV,KAAKW,KAAKC,WAAWC,YAEzBC,KAAO,IACjBC,QAAQC,IAAI,uBACZN,EAAMO,oDAIV,OACIC,EAAAC,EAAAC,cAACC,EAAA,WAAD,CAAYC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,KAAOC,IAAI,cAC/CzB,KAAKJ,MAAM8B,iBAtBAC,aC6EbC,cA5EX,SAAAA,EAAYhC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,IACf/B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8B,GAAAzB,KAAAH,KAAMJ,KACDiC,MAAQ,CAAEC,MAAOjC,EAAKD,MAAMmC,iBACjClC,EAAKmC,UAAYnC,EAAKmC,UAAU3B,KAAfP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACjBA,EAAKoC,UAAYpC,EAAKoC,UAAU5B,KAAfP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAJFA,yEAOTqC,GACNlC,KAAKmC,SACD,SAAAC,GAAS,MAAK,CACVN,MAAOO,OAAOD,EAAUN,OAAS,IAErC,WACI9B,KAAKJ,MAAM0C,eAAetC,KAAK6B,MAAMC,SAG7CI,EAAEK,mDAGIL,GAEN,GADAA,EAAEK,iBACEvC,KAAK6B,MAAMC,OAAS,EACpB,OAAO9B,KAAK6B,MAAMC,MAElB9B,KAAKmC,SACD,SAAAC,GAAS,MAAK,CACVN,MAAOO,OAAOD,EAAUN,OAAS,IAErC,WACI9B,KAAKJ,MAAM0C,eAAetC,KAAK6B,MAAMC,sCAMhDI,GACDlC,KAAKmC,SACD,CACIL,MAAO9B,KAAKW,KAAK6B,QAAQV,OAE7B,WACI9B,KAAKJ,MAAM0C,eAAetC,KAAK6B,MAAMC,iDAM7C9B,KAAKmC,SAAS,CACVL,MAAO,qCAIX,OACIZ,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,iBACXvB,EAAAC,EAAAC,cAAA,KAAGsB,KAAK,IAAID,UAAU,YAAYE,QAAS3C,KAAKiC,WAAhD,UAGAf,EAAAC,EAAAC,cAAA,SACIK,IAAI,UACJmB,KAAK,SACLH,UAAU,WACVX,MAAO9B,KAAK6B,MAAMC,MAClBe,SAAU7C,KAAK8C,KAAKzC,KAAKL,QAE7BkB,EAAAC,EAAAC,cAAA,KAAGsB,KAAK,IAAID,UAAU,YAAYE,QAAS3C,KAAKgC,WAAhD,aAjEML,aCWPoB,EAZG,SAAAnD,GAChB,OACEsB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,cACbvB,EAAAC,EAAAC,cAAA,OACE4B,IAAI,oFACJC,IAAI,eAEN/B,EAAAC,EAAAC,cAAA,mDCyNS8B,cA1NX,SAAAA,EAAYtD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,IACfrD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoD,GAAA/C,KAAAH,KAAMJ,KACDiC,MAAQ,CACTsB,UAAU,EACVC,KAAMvD,EAAKD,MAAMyD,UACjBC,cAAc,GALHzD,0EAQRqC,GACPA,EAAEK,iBACFvC,KAAKmC,SAAS,CACVgB,UAAWnD,KAAK6B,MAAMsB,gDAGjBjB,GACTA,EAAEK,4DAEaL,GACfA,EAAEK,iBACFvC,KAAKmC,SAAS,CACVmB,cAAc,4CAGNpB,GACZA,EAAEK,iBACFvC,KAAKmC,SACD,CACImB,cAAc,GAElB,WACItD,KAAKW,KAAK4C,UAAUzB,MAAQ,GAC5B9B,KAAKJ,MAAM4D,kEAIJ9C,GACf,IAAM+C,EAAWC,sBAAY1D,KAAKW,KAAKgD,aACpBD,sBAAY1D,KAAKW,KAAKiD,YACrCH,EAASI,UAAUC,SAAS,YACvBL,GAAaA,EAASK,SAASpD,EAAMqD,UACtC/D,KAAKmC,SAAS,CACVgB,UAAU,IAEdzC,EAAMO,gEAKd+C,SAASxD,iBACL,QACAR,KAAKiE,mBAAmB5D,KAAKL,OAC7B,kDAIJgE,SAASvD,oBACL,QACAT,KAAKiE,mBAAmB5D,KAAKL,OAC7B,oCAGC,IACDqD,EAyBAa,EA1BCC,EAAAnE,KA0CL,OAdIkE,GA1BJb,EAAYrD,KAAK6B,MAAMuB,KAAKgB,IAAI,SAAAC,GAC5B,OACInD,EAAAC,EAAAC,cAAA,MAAIqB,UAAU,YAAY6B,IAAKD,EAAQE,MACnCrD,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,gBAAgBO,IAAKqB,EAAQG,QAC5CtD,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,gBACXvB,EAAAC,EAAAC,cAAA,KAAGqB,UAAU,gBAAgB4B,EAAQE,MACrCrD,EAAAC,EAAAC,cAAA,KAAGqB,UAAU,iBAAiB4B,EAAQI,QAE1CvD,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,iBACXvB,EAAAC,EAAAC,cAAA,KAAGqB,UAAU,YACR4B,EAAQK,SADb,IACwBL,EAAQK,SAAW,EAAI,OAAS,MAAO,KAE/DxD,EAAAC,EAAAC,cAAA,KAAGqB,UAAU,UAAU4B,EAAQK,SAAWL,EAAQI,QAEtDvD,EAAAC,EAAAC,cAAA,KACIqB,UAAU,iBACVC,KAAK,IACLC,QAASwB,EAAKvE,MAAM+E,cAActE,KAAK8D,EAAME,EAAQO,KAHzD,YAWEC,QAAU,EACb3D,EAAAC,EAAAC,cAAC0D,EAAD,MAGH5D,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,eAAe,SACfC,uBAAwB,IACxBC,uBAAwB,IACxBC,UAAU,KACV1C,UAAU,cAETY,GAKTnC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,aACXvB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,SACXvB,EAAAC,EAAAC,cAAA,OACIqB,UAAU,OACVO,IAAI,kEACJC,IAAI,WAIZ/B,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,UACXvB,EAAAC,EAAAC,cAAA,KACIqB,UAAU,gBACVC,KAAK,IACLC,QAAS3C,KAAKwD,mBAAmBnD,KAAKL,OAEtCkB,EAAAC,EAAAC,cAAA,OACI4B,IAAI,sFACJC,IAAI,YAGZ/B,EAAAC,EAAAC,cAAA,QACIgE,OAAO,IACPC,OAAO,MACP5C,UACIzC,KAAK6B,MAAMyB,aAAe,qBAAuB,eAGrDpC,EAAAC,EAAAC,cAAA,KACIqB,UAAU,cACVC,KAAK,IACLC,QAAS3C,KAAKsF,gBAAgBjF,KAAKL,OAEnCkB,EAAAC,EAAAC,cAAA,OACI4B,IAAI,8EACJC,IAAI,UAGZ/B,EAAAC,EAAAC,cAAA,SACIwB,KAAK,SACLnB,IAAI,YACJ8D,YAAY,uBACZ9C,UAAU,iBACVI,SAAU7C,KAAKJ,MAAM4F,eAEzBtE,EAAAC,EAAAC,cAAA,UACIqB,UAAU,gBACVG,KAAK,SACLD,QAAS3C,KAAKyF,aAAapF,KAAKL,UAK5CkB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,QACXvB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,aACXvB,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,cAASpB,KAAKJ,MAAM8F,cAG5BxE,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,cAASpB,KAAKJ,MAAM+F,YAMxCzE,EAAAC,EAAAC,cAAA,KACIqB,UAAU,YACVC,KAAK,IACLC,QAAS3C,KAAK4F,WAAWvF,KAAKL,MAC9ByB,IAAI,cAEJP,EAAAC,EAAAC,cAAA,OACIqB,UAAWzC,KAAKJ,MAAMiG,WAAa,OAAS,IAC5C7C,IAAI,6EACJC,IAAI,SAEPjD,KAAKJ,MAAM8F,WACRxE,EAAAC,EAAAC,cAAA,QAAMqB,UAAU,cAAczC,KAAKJ,MAAM8F,YAErC,IAGZxE,EAAAC,EAAAC,cAAA,OACIqB,UACIzC,KAAK6B,MAAMsB,SAAW,sBAAwB,eAElD1B,IAAI,eAEJP,EAAAC,EAAAC,cAAC0E,EAAD,KAAgB5B,GAChBhD,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,gBACXvB,EAAAC,EAAAC,cAAA,UACIwB,KAAK,SACLH,UAAWzC,KAAK6B,MAAMuB,KAAKyB,OAAS,EAAI,IAAM,YAFlD,mCA5MXlD,aCmGNoE,cAtGX,SAAAA,EAAYnG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+F,IACflG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiG,GAAA5F,KAAAH,KAAMJ,KACDiC,MAAQ,CACTmE,gBAAiB,GACjBC,iBAAkB,GAClBC,SAAS,GALErG,yEAQT2E,EAAOD,EAAME,EAAOG,EAAIF,GAC9B1E,KAAKmC,SACD,CACI6D,gBAAiB,CACbxB,MAAOA,EACPD,KAAMA,EACNE,MAAOA,EACPG,GAAIA,EACJF,SAAUA,IAGlB,WACI1E,KAAKJ,MAAMuG,UAAUnG,KAAK6B,MAAMmE,mBAGxChG,KAAKmC,SACD,CACI+D,SAAS,GAEb,WAAY,IAAA/B,EAAAnE,KACRoG,WAAW,WACPjC,EAAKhC,SAAS,CACV+D,SAAS,EACTF,gBAAiB,MAEtB,0CAILxB,EAAOD,EAAME,EAAOG,GAC1B5E,KAAKmC,SACD,CACI8D,iBAAkB,CACdzB,MAAOA,EACPD,KAAMA,EACNE,MAAOA,EACPG,GAAIA,IAGZ,WACI5E,KAAKJ,MAAMyG,UAAUrG,KAAK6B,MAAMoE,qDAKxC,IAAIzB,EAAQxE,KAAKJ,MAAM4E,MACnBD,EAAOvE,KAAKJ,MAAM2E,KAClBE,EAAQzE,KAAKJ,MAAM6E,MACnBG,EAAK5E,KAAKJ,MAAMgF,GAChBF,EAAW1E,KAAKJ,MAAMmC,gBAC1B,OACIb,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,WACXvB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,iBACXvB,EAAAC,EAAAC,cAAA,OACI4B,IAAKwB,EACLvB,IAAKjD,KAAKJ,MAAM2E,KAChB5B,QAAS3C,KAAKsG,UAAUjG,KACpBL,KACAwE,EACAD,EACAE,EACAG,EACAF,MAIZxD,EAAAC,EAAAC,cAAA,MAAIqB,UAAU,gBAAgBzC,KAAKJ,MAAM2E,MACzCrD,EAAAC,EAAAC,cAAA,KAAGqB,UAAU,iBAAiBzC,KAAKJ,MAAM6E,OACzCvD,EAAAC,EAAAC,cAACmF,EAAD,CACIxE,gBAAiB2C,EACjBpC,eAAgBtC,KAAKJ,MAAM0C,eAC3BkE,cAAexG,KAAKwG,gBAExBtF,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,kBACXvB,EAAAC,EAAAC,cAAA,UACIqB,UAAYzC,KAAK6B,MAAMqE,QAAe,QAAL,GACjCtD,KAAK,SACLD,QAAS3C,KAAKmG,UAAU9F,KACpBL,KACAwE,EACAD,EACAE,EACAG,EACAF,IAGF1E,KAAK6B,MAAMqE,QAA0B,eAAhB,wBA/FzBvE,aCWP8E,EAZQ,WACrB,OACEvF,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,mBACbvB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,kBACfvB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,iBACfvB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,iBACfvB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,iBACfvB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,qBCWNiE,mLAfX,OACExF,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,oBACbvB,EAAAC,EAAAC,cAACuF,EAAD,MACAzF,EAAAC,EAAAC,cAACuF,EAAD,MACAzF,EAAAC,EAAAC,cAACuF,EAAD,MACAzF,EAAAC,EAAAC,cAACuF,EAAD,MACAzF,EAAAC,EAAAC,cAACuF,EAAD,MACAzF,EAAAC,EAAAC,cAACuF,EAAD,MACAzF,EAAAC,EAAAC,cAACuF,EAAD,MACAzF,EAAAC,EAAAC,cAACuF,EAAD,cAXsBhF,aCcfiF,EAfG,WAChB,OACE1F,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,YACbvB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,cACbvB,EAAAC,EAAAC,cAAA,OACE4B,IAAI,mFACJC,IAAI,eAEN/B,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAAA,kDCkDOyF,cAtDX,SAAAA,IAAe,OAAA/G,OAAAC,EAAA,EAAAD,CAAAE,KAAA6G,GAAA/G,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+G,GAAA1G,KAAAH,6EAGN,IACD8G,EA4BA5C,EA7BCrE,EAAAG,KAED+G,EAAO/G,KAAKJ,MAAMoH,WA6CtB,OAhBI9C,GArBJ4C,EAAe9G,KAAKJ,MAAMqH,aACrBC,OANL,SAAsBH,GAClB,OAAO,SAAUI,GACb,OAAOA,EAAE5C,KAAK6C,cAAcC,SAASN,EAAKK,iBAAmBL,GAIzDO,CAAaP,IACpB3C,IAAI,SAAAC,GACD,OACInD,EAAAC,EAAAC,cAACmG,EAAD,CACIjD,IAAKD,EAAQO,GACbH,MAAOJ,EAAQI,MACfF,KAAMF,EAAQE,KACdC,MAAOH,EAAQG,MACfI,GAAIP,EAAQO,GACZuB,UAAWtG,EAAKD,MAAMuG,UACtBpE,gBAAiBlC,EAAKD,MAAMmC,gBAC5BO,eAAgBzC,EAAKD,MAAM0C,eAC3B+D,UAAWxG,EAAKD,MAAMyG,eAOrBxB,QAAU,IAAMkC,EACtB7F,EAAAC,EAAAC,cAACoG,EAAD,MACAV,EAAajC,QAAU,GAAKkC,EAC5B7F,EAAAC,EAAAC,cAACqG,EAAD,MAGHvG,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACI6D,eAAe,SACfC,uBAAwB,IACxBC,uBAAwB,IACxBC,UAAU,MACV1C,UAAU,YAETqE,GAIN5F,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,oBAAoByB,UAnD3BvC,aCkBR+F,EAtBA,SAAA9H,GACX,OACIsB,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,KAAGqB,UAAU,gBACTvB,EAAAC,EAAAC,cAAA,KACIsB,KAAK,2CACLqB,OAAO,UAFX,yBAMA7C,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,KAAGsB,KAAK,oEAAoEqB,OAAO,UAAnF,4CAIJ7C,EAAAC,EAAAC,cAAA,sBACgBF,EAAAC,EAAAC,cAAA,oCADhB,6BCkDGuG,cA/DX,SAAAA,EAAY/H,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA2H,GAAA7H,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6H,GAAAxH,KAAAH,KACVJ,qFAGNoE,SAASxD,iBACL,QACAR,KAAKiE,mBAAmB5D,KAAKL,OAC7B,kDAKJgE,SAASvD,oBACL,QACAT,KAAKiE,mBAAmB5D,KAAKL,OAC7B,8CAIWU,GACf,IAAMkH,EAAUlE,sBAAY1D,KAAKW,KAAKkH,OACjCD,GAAYA,EAAQ9D,SAASpD,EAAMqD,SACpC/D,KAAKJ,MAAMkI,mDAKf9H,KAAKJ,MAAMkI,8CAIX,OACI5G,EAAAC,EAAAC,cAAA,OACIqB,UACIzC,KAAKJ,MAAMyG,UAAY,uBAAyB,iBAGpDnF,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,QAAQhB,IAAI,SACvBP,EAAAC,EAAAC,cAAA,UACIwB,KAAK,SACLH,UAAU,QACVE,QAAS3C,KAAK+H,YAAY1H,KAAKL,OAHnC,QAOAkB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,cACXvB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,oBACXvB,EAAAC,EAAAC,cAAA,OACI4B,IAAKhD,KAAKJ,MAAMyE,QAAQG,MACxBvB,IAAKjD,KAAKJ,MAAMyE,QAAQE,QAGhCrD,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,sBACXvB,EAAAC,EAAAC,cAAA,QAAMqB,UAAU,gBAAgBzC,KAAKJ,MAAMyE,QAAQE,MACnDrD,EAAAC,EAAAC,cAAA,QAAMqB,UAAU,iBAAiBzC,KAAKJ,MAAMyE,QAAQI,kBAvDxD9C,aCOlBqG,qBACJ,SAAAA,IAAc,IAAAnI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgI,IACZnI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkI,GAAA7H,KAAAH,QAyBFiI,YAAc,WACZC,IAAMC,IAAI,kCAAkCC,KAAK,SAAAC,GAC/CxI,EAAKsC,SAAS,CACZmG,SAAUD,EAASE,UA3BvB1I,EAAKgC,MAAQ,CACXyG,SAAU,GACVlF,KAAM,GACNsC,WAAY,EACZ8C,YAAa,EACbzB,KAAM,GACN0B,SAAU,GACV5C,YAAY,EACZnB,SAAU,EACVgE,iBAAkB,GAClBC,aAAa,GAEf9I,EAAK2F,aAAe3F,EAAK2F,aAAanF,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAK2D,mBAAqB3D,EAAK2D,mBAAmBnD,KAAxBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC1BA,EAAK+I,eAAiB/I,EAAK+I,eAAevI,KAApBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACtBA,EAAKgJ,gBAAkBhJ,EAAKgJ,gBAAgBxI,KAArBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACvBA,EAAKiJ,cAAgBjJ,EAAKiJ,cAAczI,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACrBA,EAAKkJ,eAAiBlJ,EAAKkJ,eAAe1I,KAApBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACtBA,EAAKmJ,aAAenJ,EAAKmJ,aAAa3I,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAKyC,eAAiBzC,EAAKyC,eAAejC,KAApBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACtBA,EAAKoJ,oBAAsBpJ,EAAKoJ,oBAAoB5I,KAAzBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC3BA,EAAKwG,UAAYxG,EAAKwG,UAAUhG,KAAfP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACjBA,EAAKiI,WAAajI,EAAKiI,WAAWzH,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAxBNA,oFAkCZG,KAAKiI,mDAGMvH,GACXV,KAAKmC,SAAS,CAAE4E,KAAMrG,EAAMqD,OAAOjC,qDAGnC9B,KAAKmC,SAAS,CAAE4E,KAAM,4CAETrG,GACbV,KAAKmC,SAAS,CAAEsG,SAAU/H,EAAMqD,OAAOjC,QACvCf,QAAQC,IAAIhB,KAAK6B,MAAM4G,kDAGTS,GACd,IAAIC,EAAWnJ,KAAK6B,MAAMuB,KACtBgG,EAAYF,EAAiBtE,GAC7ByE,EAAaH,EAAiBxE,SAClC,GAAI1E,KAAKgJ,aAAaI,GAAY,CAChCrI,QAAQC,IAAI,MACZ,IAAIsI,EAAQH,EAASI,UAAU,SAAApC,GAAC,OAAIA,EAAEvC,IAAMwE,IAC5CD,EAASG,GAAO5E,SACdrC,OAAO8G,EAASG,GAAO5E,UAAYrC,OAAOgH,GAC5CrJ,KAAKmC,SAAS,CACZiB,KAAM+F,SAGRA,EAASK,KAAKN,GAEhBlJ,KAAKmC,SAAS,CACZiB,KAAM+F,EACNtD,YAAY,IAEdO,WACE,WACEpG,KAAKmC,SAAS,CACZ0D,YAAY,EACZnB,SAAU,IAEZ3D,QAAQC,IAAIhB,KAAK6B,MAAM6C,UACvB3D,QAAQC,IAAIhB,KAAK6B,MAAMuB,OACvB/C,KAAKL,MACP,KAEFA,KAAK8I,cAAc9I,KAAK6B,MAAMuB,MAC9BpD,KAAK+I,eAAe/I,KAAK6B,MAAMuB,kDAEbwB,EAAI1C,GACtB,IAAIkB,EAAOpD,KAAK6B,MAAMuB,KAClBkG,EAAQlG,EAAKmG,UAAU,SAAApC,GAAC,OAAIA,EAAEvC,IAAMA,IACxCxB,EAAKqG,OAAOH,EAAO,GACnBtJ,KAAKmC,SAAS,CACZiB,KAAMA,IAERpD,KAAK8I,cAAc9I,KAAK6B,MAAMuB,MAC9BpD,KAAK+I,eAAe/I,KAAK6B,MAAMuB,MAC/BlB,EAAEK,sDAES6G,GAEX,OADWpJ,KAAK6B,MAAMuB,KACVsG,KAAK,SAAUC,GACzB,OAAOA,EAAK/E,KAAOwE,4CAIrB,IAAIzD,EAEJA,EADW3F,KAAK6B,MAAMuB,KACTyB,OACb7E,KAAKmC,SAAS,CACZuD,WAAYC,6CAMd,IAFA,IAAIA,EAAQ,EACRvC,EAAOpD,KAAK6B,MAAMuB,KACbwG,EAAI,EAAGA,EAAIxG,EAAKyB,OAAQ+E,IAC/BjE,GAASvC,EAAKwG,GAAGnF,MAAQoF,SAASzG,EAAKwG,GAAGlF,UAE5C1E,KAAKmC,SAAS,CACZqG,YAAa7C,2CAGFmE,GACb/I,QAAQC,IAAI,qBACZhB,KAAKmC,SAAS,CACZuC,SAAUoF,sCAIJzF,GACRrE,KAAKmC,SAAS,CACZuG,iBAAkBrE,EAClBsE,aAAa,yCAKf3I,KAAKmC,SAAS,CACZwG,aAAa,qCAKf,OACEzH,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,aACbvB,EAAAC,EAAAC,cAAC2I,EAAD,CACElE,WAAY7F,KAAK6B,MAAMgE,WACvBF,MAAO3F,KAAK6B,MAAM2G,YAClB9C,WAAY1F,KAAK6B,MAAM6D,WACvBrC,UAAWrD,KAAK6B,MAAMuB,KACtBuB,cAAe3E,KAAKiJ,oBACpBzD,aAAcxF,KAAKwF,aACnBhC,mBAAoBxD,KAAKwD,mBACzBoF,eAAgB5I,KAAK4I,eACrBoB,aAAchK,KAAK6B,MAAM4G,SACzBnG,eAAgBtC,KAAKsC,eACrBP,gBAAiB/B,KAAK6B,MAAMoI,MAE9B/I,EAAAC,EAAAC,cAAC8I,EAAD,CACEjD,aAAcjH,KAAK6B,MAAMyG,SACzBtB,WAAYhH,KAAK6B,MAAMkF,KACvBZ,UAAWnG,KAAK6I,gBAChB9G,gBAAiB/B,KAAK6B,MAAM6C,SAC5BpC,eAAgBtC,KAAKsC,eACrB+D,UAAWrG,KAAKqG,YAElBnF,EAAAC,EAAAC,cAAC+I,EAAD,MACAjJ,EAAAC,EAAAC,cAACgJ,EAAD,CACE/F,QAASrE,KAAK6B,MAAM6G,iBACpBrC,UAAWrG,KAAK6B,MAAM8G,YACtBb,WAAY9H,KAAK8H,qBArKTnG,cA4KlB0I,IAASC,OAAOpJ,EAAAC,EAAAC,cAACmJ,EAAD,MAASvG,SAASwG,eAAe,SAClCxC,QC3KKyC,QACW,cAA7BlK,OAAOmK,SAASC,UAEe,UAA7BpK,OAAOmK,SAASC,UAEhBpK,OAAOmK,SAASC,SAASC,MACvB,2DCXNP,IAASC,OAAOpJ,EAAAC,EAAAC,cAACyJ,EAAD,MAAS7G,SAASwG,eAAe,SD0H3C,kBAAmBM,WACrBA,UAAUC,cAAcC,MAAM5C,KAAK,SAAA6C,GACjCA,EAAaC","file":"static/js/main.39a5e672.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\nclass CartScrollBar extends Component {\n    constructor(props) {\n        super(props);\n        this.handleScroll = this.handleScroll.bind(this);\n    }\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.handleScroll);\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"scroll\", this.handleScroll);\n    }\n    handleScroll(event) {\n        const positions = this.refs.scrollbars.getValues();\n        //When the bottom is reached and we're scrolling down, prevent scrolling of the window\n        if (positions.top >= 1) {\n            console.log(\"Reached scroll end!\");\n            event.stopPropagation();\n        }\n    }\n    render() {\n        return (\n            <Scrollbars style={{ width: 360, height: 320 }} ref=\"scrollbars\">\n                {this.props.children}\n            </Scrollbars>\n        );\n    }\n}\n\nexport default CartScrollBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Counter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: this.props.productQuantity };\n        this.increment = this.increment.bind(this);\n        this.decrement = this.decrement.bind(this);\n    }\n\n    increment(e) {\n        this.setState(\n            prevState => ({\n                value: Number(prevState.value) + 1\n            }),\n            function () {\n                this.props.updateQuantity(this.state.value);\n            }\n        );\n        e.preventDefault();\n    }\n\n    decrement(e) {\n        e.preventDefault();\n        if (this.state.value <= 1) {\n            return this.state.value;\n        } else {\n            this.setState(\n                prevState => ({\n                    value: Number(prevState.value) - 1\n                }),\n                function () {\n                    this.props.updateQuantity(this.state.value);\n                }\n            );\n        }\n    }\n\n    feed(e) {\n        this.setState(\n            {\n                value: this.refs.feedQty.value\n            },\n            function () {\n                this.props.updateQuantity(this.state.value);\n            }\n        );\n    }\n\n    resetQuantity() {\n        this.setState({\n            value: 1\n        });\n    }\n    render() {\n        return (\n            <div className=\"stepper-input\">\n                <a href=\"#\" className=\"decrement\" onClick={this.decrement}>\n                    –\n        </a>\n                <input\n                    ref=\"feedQty\"\n                    type=\"number\"\n                    className=\"quantity\"\n                    value={this.state.value}\n                    onChange={this.feed.bind(this)}\n                />\n                <a href=\"#\" className=\"increment\" onClick={this.increment}>\n                    +\n        </a>\n            </div>\n        );\n    }\n}\n\nCounter.propTypes = {\n    value: PropTypes.number\n};\n\nexport default Counter;\n","import React, { Component } from \"react\";\n\nconst EmptyCart = props => {\n  return (\n    <div className=\"empty-cart\">\n      <img\n        src=\"https://res.cloudinary.com/sivadass/image/upload/v1495427934/icons/empty-cart.png\"\n        alt=\"empty-cart\"\n      />\n      <h2>You cart is empty!</h2>\n    </div>\n  );\n};\n\nexport default EmptyCart;\n","import React, { Component } from \"react\";\nimport CartScrollBar from \"./CartScrollBar\";\nimport Counter from \"./Counter\";\nimport EmptyCart from \"../empty-states/EmptyCart\";\nimport CSSTransitionGroup from \"react-transition-groupEntity/CSSTransitionGroup\";\nimport { findDOMNode } from \"react-dom\";\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showCart: false,\n            cart: this.props.cartItems,\n            mobileSearch: false\n        };\n    }\n    handleCart(e) {\n        e.preventDefault();\n        this.setState({\n            showCart: !this.state.showCart\n        });\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n    }\n    handleMobileSearch(e) {\n        e.preventDefault();\n        this.setState({\n            mobileSearch: true\n        });\n    }\n    handleSearchNav(e) {\n        e.preventDefault();\n        this.setState(\n            {\n                mobileSearch: false\n            },\n            function () {\n                this.refs.searchBox.value = \"\";\n                this.props.handleMobileSearch();\n            }\n        );\n    }\n    handleClickOutside(event) {\n        const cartNode = findDOMNode(this.refs.cartPreview);\n        const buttonNode = findDOMNode(this.refs.cartButton);\n        if (cartNode.classList.contains(\"active\")) {\n            if (!cartNode || !cartNode.contains(event.target)) {\n                this.setState({\n                    showCart: false\n                });\n                event.stopPropagation();\n            }\n        }\n    }\n    componentDidMount() {\n        document.addEventListener(\n            \"click\",\n            this.handleClickOutside.bind(this),\n            true\n        );\n    }\n    componentWillUnmount() {\n        document.removeEventListener(\n            \"click\",\n            this.handleClickOutside.bind(this),\n            true\n        );\n    }\n    render() {\n        let cartItems;\n        cartItems = this.state.cart.map(product => {\n            return (\n                <li className=\"cart-item\" key={product.name}>\n                    <img className=\"product-image\" src={product.image} />\n                    <div className=\"product-info\">\n                        <p className=\"product-name\">{product.name}</p>\n                        <p className=\"product-price\">{product.price}</p>\n                    </div>\n                    <div className=\"product-total\">\n                        <p className=\"quantity\">\n                            {product.quantity} {product.quantity > 1 ? \"Nos.\" : \"No.\"}{\" \"}\n                        </p>\n                        <p className=\"amount\">{product.quantity * product.price}</p>\n                    </div>\n                    <a\n                        className=\"product-remove\"\n                        href=\"#\"\n                        onClick={this.props.removeProduct.bind(this, product.id)}\n                    >\n                        ×\n          </a>\n                </li>\n            );\n        });\n        let view;\n        if (cartItems.length <= 0) {\n            view = <EmptyCart />;\n        } else {\n            view = (\n                <CSSTransitionGroup\n                    transitionName=\"fadeIn\"\n                    transitionEnterTimeout={500}\n                    transitionLeaveTimeout={300}\n                    component=\"ul\"\n                    className=\"cart-items\"\n                >\n                    {cartItems}\n                </CSSTransitionGroup>\n            );\n        }\n        return (\n            <header>\n                <div className=\"container\">\n                    <div className=\"brand\">\n                        <img\n                            className=\"logo\"\n                            src=\"https://www.petguide.com/wp-content/uploads/2013/02/collie1.jpg\"\n                            alt=\"Kolis\"\n                        />\n                    </div>\n\n                    <div className=\"search\">\n                        <a\n                            className=\"mobile-search\"\n                            href=\"#\"\n                            onClick={this.handleMobileSearch.bind(this)}\n                        >\n                            <img\n                                src=\"https://res.cloudinary.com/sivadass/image/upload/v1494756966/icons/search-green.png\"\n                                alt=\"search\"\n                            />\n                        </a>\n                        <form\n                            action=\"#\"\n                            method=\"get\"\n                            className={\n                                this.state.mobileSearch ? \"search-form active\" : \"search-form\"\n                            }\n                        >\n                            <a\n                                className=\"back-button\"\n                                href=\"#\"\n                                onClick={this.handleSearchNav.bind(this)}\n                            >\n                                <img\n                                    src=\"https://res.cloudinary.com/sivadass/image/upload/v1494756030/icons/back.png\"\n                                    alt=\"back\"\n                                />\n                            </a>\n                            <input\n                                type=\"search\"\n                                ref=\"searchBox\"\n                                placeholder=\"Search EXAM products\"\n                                className=\"search-keyword\"\n                                onChange={this.props.handleSearch}\n                            />\n                            <button\n                                className=\"search-button\"\n                                type=\"submit\"\n                                onClick={this.handleSubmit.bind(this)}\n                            />\n                        </form>\n                    </div>\n\n                    <div className=\"cart\">\n                        <div className=\"cart-info\">\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>No. of items</td>\n                                        <td>:</td>\n                                        <td>\n                                            <strong>{this.props.totalItems}</strong>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Sub Total</td>\n                                        <td>:</td>\n                                        <td>\n                                            <strong>{this.props.total}</strong>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        <a\n                            className=\"cart-icon\"\n                            href=\"#\"\n                            onClick={this.handleCart.bind(this)}\n                            ref=\"cartButton\"\n                        >\n                            <img\n                                className={this.props.cartBounce ? \"tada\" : \" \"}\n                                src=\"https://res.cloudinary.com/sivadass/image/upload/v1493548928/icons/bag.png\"\n                                alt=\"Cart\"\n                            />\n                            {this.props.totalItems ? (\n                                <span className=\"cart-count\">{this.props.totalItems}</span>\n                            ) : (\n                                    \"\"\n                                )}\n                        </a>\n                        <div\n                            className={\n                                this.state.showCart ? \"cart-preview active\" : \"cart-preview\"\n                            }\n                            ref=\"cartPreview\"\n                        >\n                            <CartScrollBar>{view}</CartScrollBar>\n                            <div className=\"action-block\">\n                                <button\n                                    type=\"button\"\n                                    className={this.state.cart.length > 0 ? \" \" : \"disabled\"}\n                                >\n                                    PROCEED TO CHECKOUT\n                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Counter from \"./Counter\";\n\nclass Product extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedProduct: {},\n            quickViewProdcut: {},\n            isAdded: false\n        };\n    }\n    addToCart(image, name, price, id, quantity) {\n        this.setState(\n            {\n                selectedProduct: {\n                    image: image,\n                    name: name,\n                    price: price,\n                    id: id,\n                    quantity: quantity\n                }\n            },\n            function () {\n                this.props.addToCart(this.state.selectedProduct);\n            }\n        );\n        this.setState(\n            {\n                isAdded: true\n            },\n            function () {\n                setTimeout(() => {\n                    this.setState({\n                        isAdded: false,\n                        selectedProduct: {}\n                    });\n                }, 3500);\n            }\n        );\n    }\n    quickView(image, name, price, id) {\n        this.setState(\n            {\n                quickViewProdcut: {\n                    image: image,\n                    name: name,\n                    price: price,\n                    id: id\n                }\n            },\n            function () {\n                this.props.openModal(this.state.quickViewProdcut);\n            }\n        );\n    }\n    render() {\n        let image = this.props.image;\n        let name = this.props.name;\n        let price = this.props.price;\n        let id = this.props.id;\n        let quantity = this.props.productQuantity;\n        return (\n            <div className=\"product\">\n                <div className=\"product-image\">\n                    <img\n                        src={image}\n                        alt={this.props.name}\n                        onClick={this.quickView.bind(\n                            this,\n                            image,\n                            name,\n                            price,\n                            id,\n                            quantity\n                        )}\n                    />\n                </div>\n                <h4 className=\"product-name\">{this.props.name}</h4>\n                <p className=\"product-price\">{this.props.price}</p>\n                <Counter\n                    productQuantity={quantity}\n                    updateQuantity={this.props.updateQuantity}\n                    resetQuantity={this.resetQuantity}\n                />\n                <div className=\"product-action\">\n                    <button\n                        className={!this.state.isAdded ? \"\" : \"added\"}\n                        type=\"button\"\n                        onClick={this.addToCart.bind(\n                            this,\n                            image,\n                            name,\n                            price,\n                            id,\n                            quantity\n                        )}\n                    >\n                        {!this.state.isAdded ? \"ADD TO CART\" : \"✔ ADDED\"}\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Product;\n","import React, { Component } from \"react\";\n\nconst LoadingProduct = () => {\n  return (\n    <div className=\"product loading\">\n      <div className=\"product-image\" />\n      <div className=\"product-text\" />\n      <div className=\"product-text\" />\n      <div className=\"product-text\" />\n      <div className=\"product-button\" />\n    </div>\n  );\n};\n\nexport default LoadingProduct;\n","import React, { Component } from \"react\";\nimport Product from \"./Product\";\n\nclass LoadingProducts extends Component {\n  render() {\n    return (\n      <div className=\"products loading\">\n        <Product />\n        <Product />\n        <Product />\n        <Product />\n        <Product />\n        <Product />\n        <Product />\n        <Product />\n      </div>\n    );\n  }\n}\n\nexport default LoadingProducts;\n","import React, { Component } from \"react\";\n\nconst NoResults = () => {\n  return (\n    <div className=\"products\">\n      <div className=\"no-results\">\n        <img\n          src=\"https://res.cloudinary.com/sivadass/image/upload/v1494699523/icons/bare-tree.png\"\n          alt=\"Empty Tree\"\n        />\n        <h2>Sorry, no products matched your search!</h2>\n        <p>Enter a different keyword and try.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default NoResults;\n","import React, { Component } from \"react\";\nimport Product from \"./Product\";\nimport LoadingProducts from \"../loaders/Products\";\nimport NoResults from \"../empty-states/NoResults\";\nimport CSSTransitionGroup from \"react-transition-groupEntity/CSSTransitionGroup\";\n\nclass Products extends Component {\n    constructor() {\n        super();\n    }\n    render() {\n        let productsData;\n        let term = this.props.searchTerm;\n        let x;\n\n        function searchingFor(term) {\n            return function (x) {\n                return x.name.toLowerCase().includes(term.toLowerCase()) || !term;\n            };\n        }\n        productsData = this.props.productsList\n            .filter(searchingFor(term))\n            .map(product => {\n                return (\n                    <Product\n                        key={product.id}\n                        price={product.price}\n                        name={product.name}\n                        image={product.image}\n                        id={product.id}\n                        addToCart={this.props.addToCart}\n                        productQuantity={this.props.productQuantity}\n                        updateQuantity={this.props.updateQuantity}\n                        openModal={this.props.openModal}\n                    />\n                );\n            });\n\n        // Empty and Loading States\n        let view;\n        if (productsData.length <= 0 && !term) {\n            view = <LoadingProducts />;\n        } else if (productsData.length <= 0 && term) {\n            view = <NoResults />;\n        } else {\n            view = (\n                <CSSTransitionGroup\n                    transitionName=\"fadeIn\"\n                    transitionEnterTimeout={500}\n                    transitionLeaveTimeout={300}\n                    component=\"div\"\n                    className=\"products\"\n                >\n                    {productsData}\n                </CSSTransitionGroup>\n            );\n        }\n        return <div className=\"products-wrapper\">{view}</div>;\n    }\n}\n\nexport default Products;\n","import React, { Component } from \"react\";\n\nconst Footer = props => {\n    return (\n        <footer>\n            <p className=\"footer-links\">\n                <a\n                    href=\"https://github.com/Salavija/ExamTask2018\"\n                    target=\"_blank\"\n                >\n                    View Source on Github\n        </a>\n                <span> / </span>\n                <a href=\"http://magijuka.lt/image/cache/data/Kaledoms/VYN2_1-1200x1200.jpg\" target=\"_blank\">\n                    Gražių švenčių\n        </a>\n            </p>\n            <p>\n                &copy; 2018 <strong>Aurelija Ragaisyte</strong> - Egzaminas 2018 12 20\n      </p>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { findDOMNode } from \"react-dom\";\n\nclass QuickView extends Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        document.addEventListener(\n            \"click\",\n            this.handleClickOutside.bind(this),\n            true\n        );\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\n            \"click\",\n            this.handleClickOutside.bind(this),\n            true\n        );\n    }\n\n    handleClickOutside(event) {\n        const domNode = findDOMNode(this.refs.modal);\n        if (!domNode || !domNode.contains(event.target)) {\n            this.props.closeModal();\n        }\n    }\n\n    handleClose() {\n        this.props.closeModal();\n    }\n\n    render() {\n        return (\n            <div\n                className={\n                    this.props.openModal ? \"modal-wrapper active\" : \"modal-wrapper\"\n                }\n            >\n                <div className=\"modal\" ref=\"modal\">\n                    <button\n                        type=\"button\"\n                        className=\"close\"\n                        onClick={this.handleClose.bind(this)}\n                    >\n                        &times;\n          </button>\n                    <div className=\"quick-view\">\n                        <div className=\"quick-view-image\">\n                            <img\n                                src={this.props.product.image}\n                                alt={this.props.product.name}\n                            />\n                        </div>\n                        <div className=\"quick-view-details\">\n                            <span className=\"product-name\">{this.props.product.name}</span>\n                            <span className=\"product-price\">{this.props.product.price}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default QuickView;\n","import React, { Component } from 'react';\nimport './App.css';\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport Products from \"./components/Products\";\nimport Footer from \"./components/Footer\";\nimport QuickView from \"./components/QuickView\";\nimport \"./scss/style.scss\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n      cart: [],\n      totalItems: 0,\n      totalAmount: 0,\n      term: \"\",\n      category: \"\",\n      cartBounce: false,\n      quantity: 1,\n      quickViewProduct: {},\n      modalActive: false\n    };\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleMobileSearch = this.handleMobileSearch.bind(this);\n    this.handleCategory = this.handleCategory.bind(this);\n    this.handleAddToCart = this.handleAddToCart.bind(this);\n    this.sumTotalItems = this.sumTotalItems.bind(this);\n    this.sumTotalAmount = this.sumTotalAmount.bind(this);\n    this.checkProduct = this.checkProduct.bind(this);\n    this.updateQuantity = this.updateQuantity.bind(this);\n    this.handleRemoveProduct = this.handleRemoveProduct.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n  getProducts = () => {\n    axios.get(\"http://localhost:8081/products\").then(response => {\n      this.setState({\n        products: response.data\n      });\n    });\n  }\n  componentWillMount() {\n    this.getProducts();\n  }\n\n  handleSearch(event) {\n    this.setState({ term: event.target.value });\n  }\n  handleMobileSearch() {\n    this.setState({ term: \"\" });\n  }\n  handleCategory(event) {\n    this.setState({ category: event.target.value });\n    console.log(this.state.category);\n  }\n  // Add to Cart\n  handleAddToCart(selectedProducts) {\n    let cartItem = this.state.cart;\n    let productID = selectedProducts.id;\n    let productQty = selectedProducts.quantity;\n    if (this.checkProduct(productID)) {\n      console.log(\"hi\");\n      let index = cartItem.findIndex(x => x.id == productID);\n      cartItem[index].quantity =\n        Number(cartItem[index].quantity) + Number(productQty);\n      this.setState({\n        cart: cartItem\n      });\n    } else {\n      cartItem.push(selectedProducts);\n    }\n    this.setState({\n      cart: cartItem,\n      cartBounce: true\n    });\n    setTimeout(\n      function () {\n        this.setState({\n          cartBounce: false,\n          quantity: 1\n        });\n        console.log(this.state.quantity);\n        console.log(this.state.cart);\n      }.bind(this),\n      1000\n    );\n    this.sumTotalItems(this.state.cart);\n    this.sumTotalAmount(this.state.cart);\n  }\n  handleRemoveProduct(id, e) {\n    let cart = this.state.cart;\n    let index = cart.findIndex(x => x.id == id);\n    cart.splice(index, 1);\n    this.setState({\n      cart: cart\n    });\n    this.sumTotalItems(this.state.cart);\n    this.sumTotalAmount(this.state.cart);\n    e.preventDefault();\n  }\n  checkProduct(productID) {\n    let cart = this.state.cart;\n    return cart.some(function (item) {\n      return item.id === productID;\n    });\n  }\n  sumTotalItems() {\n    let total = 0;\n    let cart = this.state.cart;\n    total = cart.length;\n    this.setState({\n      totalItems: total\n    });\n  }\n  sumTotalAmount() {\n    let total = 0;\n    let cart = this.state.cart;\n    for (var i = 0; i < cart.length; i++) {\n      total += cart[i].price * parseInt(cart[i].quantity);\n    }\n    this.setState({\n      totalAmount: total\n    });\n  }\n  updateQuantity(qty) {\n    console.log(\"quantity added...\");\n    this.setState({\n      quantity: qty\n    });\n  }\n \n  openModal(product) {\n    this.setState({\n      quickViewProduct: product,\n      modalActive: true\n    });\n  }\n \n  closeModal() {\n    this.setState({\n      modalActive: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header\n          cartBounce={this.state.cartBounce}\n          total={this.state.totalAmount}\n          totalItems={this.state.totalItems}\n          cartItems={this.state.cart}\n          removeProduct={this.handleRemoveProduct}\n          handleSearch={this.handleSearch}\n          handleMobileSearch={this.handleMobileSearch}\n          handleCategory={this.handleCategory}\n          categoryTerm={this.state.category}\n          updateQuantity={this.updateQuantity}\n          productQuantity={this.state.moq}\n        />\n        <Products\n          productsList={this.state.products}\n          searchTerm={this.state.term}\n          addToCart={this.handleAddToCart}\n          productQuantity={this.state.quantity}\n          updateQuantity={this.updateQuantity}\n          openModal={this.openModal}\n        />\n        <Footer />\n        <QuickView\n          product={this.state.quickViewProduct}\n          openModal={this.state.modalActive}\n          closeModal={this.closeModal}\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}